apiVersion: v1
kind: Service
metadata:
  labels:
    app: flink-sql-gateway
    type: flink-native-kubernetes
  name: {{ .Values.flinkSqlGateway.name }}
  namespace: {{ .Release.namespace }}
spec:
  ports:
  - name: gateway
    port: 8083
    protocol: TCP
    targetPort: 8083
  selector:
    app: flink-sql-gateway
    type: flink-native-kubernetes
  sessionAffinity: None
  type: ClusterIP

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: flink-sql-gateway
    type: flink-native-kubernetes
  name: {{ .Values.flinkSqlGateway.name }}
  namespace: {{ .Release.namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: flink-sql-gateway
      type: flink-native-kubernetes
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: flink-sql-gateway
        type: flink-native-kubernetes
    spec:
      imagePullSecrets:
      - name: ghcr-login-secret
      containers:
      - name: flink-main-container
        image: ghcr.io/monoptic-io/monoptic-flink-runtime:{{ default .Chart.AppVersion .Values.imageTagOverride }}
        args:
        - bash
        - -c
        - 'sql-gateway.sh start-foreground -Dsql-gateway.endpoint.rest.address=$_POD_IP_ADDRESS'
        command:
        - /docker-entrypoint.sh
        env:
        - name: _POD_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8083
          name: gateway
          protocol: TCP
        startupProbe:
          failureThreshold: 2147483647
          httpGet:
            path: /v1/info
            port: gateway
            scheme: HTTP
          periodSeconds: 1
          successThreshold: 1
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/flink/conf
          name: flink-config-volume
      restartPolicy: Always
      serviceAccount: flink
      serviceAccountName: flink
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 300
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 300
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: log4j-console.properties
            path: log4j-console.properties
          - key: flink-conf.yaml
            path: flink-conf.yaml
          name: flink-config-{{ .Values.flinkSessionCluster.name }}
        name: flink-config-volume

